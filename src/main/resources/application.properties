# ========================================
# HIS电子发票系统 - 应用配置文件
# ========================================

# 应用名称
spring.application.name=invoice-system

# 服务器端口
server.port=8080

# ========================================
# Oracle 11g 数据库配置
# ========================================
# Oracle数据库连接配置
# 连接方式1：使用服务名（推荐）
# 重要：数据库字符集是US7ASCII，但存储了中文，需要在连接字符串中指定字符集
# 添加oracle.jdbc.defaultNChar参数，强制使用National Character Set
spring.datasource.url=jdbc:oracle:thin:@172.16.1.9:1521:pqrac?oracle.jdbc.defaultNChar=true
# 连接方式2：使用完整TNS描述符
#spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.1.9)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=pqrac)))

# 数据库用户名和密码
spring.datasource.username=weixin
spring.datasource.password=Bjgxrmyy123

# Oracle驱动类
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Oracle字符集配置（关键！解决US7ASCII数据库中文问题）
# 设置JDBC驱动属性 - 使用GBK字符集（因为US7ASCII数据库中实际以GBK存储中文）
spring.datasource.hikari.data-source-properties.oracle.jdbc.defaultNChar=true
spring.datasource.hikari.data-source-properties.oracle.jdbc.J2EE13Compliant=true

# 关键配置：设置Oracle客户端字符集为GBK
# 这会告诉JDBC驱动使用GBK来解释数据库中的字节
spring.datasource.hikari.data-source-properties.oracle.server.characterset=ZHS16GBK

# 强制JDBC使用指定的字符集读取数据
spring.datasource.hikari.data-source-properties.oracle.jdbc.useUnicode=true
spring.datasource.hikari.data-source-properties.oracle.jdbc.characterEncoding=GBK

# 设置NLS参数（每次连接执行）
# 关键：设置NLS_CHARACTERSET为ZHS16GBK，让Oracle按GBK解释数据
spring.datasource.hikari.connection-init-sql=ALTER SESSION SET NLS_LANGUAGE='SIMPLIFIED CHINESE' NLS_TERRITORY='CHINA' NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS'

# 设置系统属性（在JVM启动时设置）
# 这个需要在启动脚本中添加：-Doracle.jdbc.defaultNChar=true -Dfile.encoding=UTF-8

# 连接池配置（HikariCP）
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000

# Oracle连接池特殊配置
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

# ========================================
# JPA配置（Oracle专用）
# ========================================
# Hibernate自动建表策略：none-不自动建表（使用视图，不需要建表）
spring.jpa.hibernate.ddl-auto=none

# 显示SQL语句（开发环境建议开启，生产环境建议关闭）
spring.jpa.show-sql=true

# 格式化SQL输出
spring.jpa.properties.hibernate.format_sql=true

# Oracle数据库方言（Oracle 11g）
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

# Hibernate命名策略配置（关键！）
# 使用标准命名策略，直接使用@Column注解中指定的列名，不做任何转换
# 这对于Oracle大写列名非常重要
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl

# Oracle特殊配置
# 使用Unicode字符集（数据库字符集为US7ASCII，需要特别处理中文）
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Hibernate JDBC 配置
spring.jpa.properties.hibernate.jdbc.use_unicode_string_binding=false
spring.jpa.properties.hibernate.jdbc.use_get_generated_keys=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# 禁用自动提交（推荐）
spring.jpa.properties.hibernate.connection.autocommit=false

# 批量操作大小
spring.jpa.properties.hibernate.jdbc.batch_size=20

# 二级缓存配置（可选）
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

# ========================================
# 邮件配置（预留，使用时请修改为实际配置）
# ========================================
# SMTP服务器地址
#spring.mail.host=smtp.example.com
# SMTP服务器端口
#spring.mail.port=587
# 发送邮箱账号
#spring.mail.username=your_email@example.com
# 发送邮箱密码或授权码
#spring.mail.password=your_password
# 邮件编码
#spring.mail.default-encoding=UTF-8
# SMTP认证
#spring.mail.properties.mail.smtp.auth=true
# 启用TLS加密
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

# ========================================
# 文件上传配置
# ========================================
# 单个文件最大大小（默认1MB，这里设置为10MB）
spring.servlet.multipart.max-file-size=10MB
# 单次请求最大大小（默认10MB）
spring.servlet.multipart.max-request-size=10MB

# ========================================
# 日志配置
# ========================================
# 日志级别：TRACE < DEBUG < INFO < WARN < ERROR
logging.level.root=INFO
logging.level.com.hospital.invoice=DEBUG
# Hibernate SQL日志
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# 日志输出格式
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
# 日志文件位置（可选）
#logging.file.name=logs/invoice-system.log
# 日志文件最大大小
#logging.file.max-size=10MB
# 保留的日志文件数量
#logging.file.max-history=30

# ========================================
# 时区配置
# ========================================
# 设置时区为北京时间（GMT+8）
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# ========================================
# JSON配置
# ========================================
# 返回的JSON中包含null字段
spring.jackson.default-property-inclusion=ALWAYS
# 美化JSON输出（开发环境建议开启，生产环境建议关闭）
spring.jackson.serialization.indent_output=false

# ========================================
# HTTP编码配置（解决中文乱码问题）
# ========================================
# 强制HTTP请求和响应使用UTF-8编码
# 注意：即使JVM使用GBK，HTTP仍强制使用UTF-8
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.servlet.encoding.force-request=true
server.servlet.encoding.force-response=true
# HTTP消息转换器字符编码
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# ========================================
# 跨域配置（CORS）
# ========================================
# 已在Controller中使用@CrossOrigin注解，也可以在这里全局配置
# 允许的源
#spring.web.cors.allowed-origins=http://localhost:3000
# 允许的方法
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# 允许的头
#spring.web.cors.allowed-headers=*
# 允许携带凭证
#spring.web.cors.allow-credentials=true

# ========================================
# 自定义配置（可根据实际需求添加）
# ========================================
# PDF文件存储路径
#invoice.pdf.storage.path=/data/invoice/pdf/
# 发票二维码存储路径
#invoice.qrcode.storage.path=/data/invoice/qrcode/
# 文件访问URL前缀
#invoice.file.url.prefix=https://your-domain.com/files/

